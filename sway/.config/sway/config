# Sway config file (v1)
#
# Please see https://github.com/swaywm/sway/wiki for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SF Pro Text 1
default_border none
default_floating_border none
titlebar_padding 1
titlebar_border_thickness 0
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Removed: dex is not typically needed for autostart with Sway
# exec --no-startup-id dex --autostart --environment i3

# Sway equivalent for xss-lock: swayidle and swaylock
# swayidle will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and finally suspend your system.
exec swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -c 000000'

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
# Changed i3status refresh to use a sway-compatible method if you use swaybar with i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym button1 nop
bindsym button2 nop

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal (recommend foot, kitty, or alacritty for Wayland native)
bindsym $mod+Return exec wezterm

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# dmenu_run might work via XWayland, but a Wayland-native option like wofi is preferred.
# For simplicity, keeping dmenu_run for now. If issues, switch to wofi.
bindsym $mod+d exec --no-startup-id wofi --show drun
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 terminal
set $ws2 browsers
set $ws3 design
set $ws4 multimedia
set $ws5 productivity
set $ws6 explorer
set $ws7 settings
set $ws8 office
set $ws9 code
set $ws10 documentation

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# Output assignments for workspaces - eDP-1 and DP-1 are common on laptops.
# Use `swaymsg -t get_outputs` to find your actual output names.
workspace "$ws1" output eDP-1
workspace "$ws4" output eDP-1
workspace "$ws5" output eDP-1
workspace "$ws6" output eDP-1
workspace "$ws7" output eDP-1
workspace "$ws10" output eDP-1
workspace "$ws9" output DP-1
workspace "$ws8" output DP-1
workspace "$ws2" output DP-1
workspace "$ws3" output DP-1

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart
# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+x exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'"

# Set wallpaper with swaybg (Wayland native)
exec --no-startup-id swaybg -i $HOME/Pictures/.desktop_wallpapers/R4ct6De-arch-linux-wallpaper.png -m fill

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym semicolon resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bar {
    id 1
    position top
    mode hide
    status_command waybar
    font pango:SF Pro Text 10
    colors {
        background #000000
        statusline #ffffff
        separator #666666
        focused_workspace #285577 #0dcbb5 #3a3a3a
        binding_mode    #285577 #f1f2c2 #3a3a3a
    }
}

set $utilities_launcher "Utilities"
bindsym $mod+u mode "$utilities_launcher"

mode "$utilities_launcher" {
    bindsym l exec --no-startup-id libreoffice
    bindsym i exec --no-startup-id inkscape
    bindsym g exec --no-startup-id gimp
    bindsym e exec --no-startup-id exaile
    bindsym h exec --no-startup-id haruna
    # DRI_PRIME=1 might not be needed or handled differently in Wayland for discrete GPUs. Test it.
    bindsym f exec --no-startup-id DRI_PRIME=1 figma-linux
    bindsym z exec "swaymsg workspace $ws5, exec zenkit"
    bindsym t exec --no-startup-id wezterm
    bindsym Shift+z exec "swaymsg workspace $ws10, exec zeal"
    bindsym a exec --no-startup-id studio.sh
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym $mod+shift+f [class="(?i)firefox"] kill
bindsym $mod+shift+a [instance="calibre-gui"] kill
# Use swaylock for locking screen
bindsym $mod+Mod1+l exec "swaylock -i $HOME/Pictures/.wallpaper.png"
# Replaced xautolock with swayidle, as shown above.
# exec "xautolock -detectsleep -time 10 -locker \"i3lock -i $HOME/Pictures/.wallpaper.png\""

bindsym $mod+b mode "$browser_launcher"
bindsym XF86HomePage exec firefox
bindsym XF86Calculator exec kcalc
set $browser_launcher "Browsers"
mode "$browser_launcher" {
    # DRI_PRIME=1 might not be needed or handled differently in Wayland for discrete GPUs. Test it.
    bindsym n exec DRI_PRIME=1 firefox-nightly
    bindsym c exec calibre
    bindsym e exec epiphany
    bindsym t exec torbrowser-launcher
    bindsym Shift+c exec DRI_PRIME=1 chromium
    bindsym y exec yandex-browser-stable
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+y exec systemsettings5
assign [window_role="browser" instance="figma-linux"] $ws3
assign [class="wezterm"] $ws1
assign [class="Inkscape"] $ws3
assign [class="Gimp"] $ws3
assign [instance="^exaile$"]  $ws4
assign [instance="^haruna$"]  $ws4
assign [instance="^calibre-gui$"] $ws5
assign [instance="^klavaro$"] $ws5
assign [instance="^kontrast$"] $ws5
assign [instance="^gwenview$"] $ws5
assign [instance="moderncsv"] $ws5
assign [instance="^telegram-desktop$"] $ws5
assign [instance="^discord$"] $ws5
assign [class="thunderbird"] $ws5
assign [class="transmission"] $ws5
assign [instance="systemsettings5"] $ws7
assign [class="Vmware"] $ws7
assign [instance="soffice"] $ws8
assign [class="okular"] $ws8
assign [class="code-oss"] $ws9
assign [class="charles"] $ws5
assign [window_role="browser"] $ws2
workspace_layout tabbed

# Brightness control is fine with brightnessctl
bindsym XF86MonBrightnessUp exec brightnessctl s 10%+
bindsym XF86MonBrightnessDown exec brightnessctl s 10%-

set $music_mode "Playlists"
# Exaile music player key bindings
bindsym $mod+Mod1+p exec "exaile -p"
bindsym $mod+Mod1+n exec "exaile -n"
bindsym $mod+Mod1+t exec "exaile -t"
bindsym $mod+Mod1+KP_Add exec "exaile -i 5"
bindsym $mod+Mod1+KP_Subtract exec "exaile -l 5"
bindsym $mod+Mod1+m mode "$music_mode"

mode "$music_mode" {
    bindsym a exec "exaile -s && exaile '$HOME/Playlists/african oldies.m3u'"
    bindsym f exec "exaile -s && exaile '$HOME/Playlists/Funk.m3u'"
    bindsym Shift+f exec "exaile -s && exaile '$HOME/Playlists/French Rap.m3u'"
    bindsym h exec "exaile -s && exaile '$HOME/Playlists/Hip-Hop.m3u'"
    bindsym j exec "exaile -s && exaile '$HOME/Playlists/Jazz.m3u'"
    bindsym m exec "exaile -s && exaile '$HOME/Playlists/Meditations.m3u'"
    bindsym n exec "exaile -s && exaile '$HOME/Playlists/Naija.m3u'"
    bindsym p exec "exaile -s && exaile '$HOME/Playlists/Pop.m3u'"
    bindsym r exec "exaile -s && exaile '$HOME/Playlists/Rythm and Blues.m3u'"
    bindsym Shift+r exec "exaile -s && exaile '$HOME/Playlists/Reading.m3u'"
    bindsym s exec "exaile -s && exaile '$HOME/Playlists/Soul.m2u'"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym F7 exec "swaymsg output DP-1 enable position 0 0, output eDP-1 enable position 1920 0"

set $productivity_mode "Productivity"
bindsym $mod+Mod1+o mode "$productivity_mode"

mode "$productivity_mode" {
    bindsym e exec emoji-picker
    bindsym c exec /opt/charles/bin/charles
    bindsym k exec kontrast
    bindsym Shift+k exec klavaro
    bindsym b exec thunderbird
    bindsym v exec vmware
    bindsym t exec Telegram
    bindsym m exec moderncsv
    bindsym Shift+d exec --no-startup-id discord
    bindsym s exec --no-startup-id snapclear
    bindsym Shift+t exec --no-startup-id transmission-qt
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

set $token_mode "Tokens"
bindsym $mod+Shift+t mode "$token_mode"

mode "$token_mode" {
    # xclip is an X11 tool. Use wl-copy for Wayland clipboard.
    bindsym Shift+g exec "(sleep 30 && echo -n | wl-copy) & grep -E ^gl $HOME/.actk.pl |& wl-copy"
    bindsym g exec "(sleep 30 && echo -n | wl-copy) & grep -E ^ghp $HOME/.actk.pl |& wl-copy"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

set $bluetooth_connect_mode "Bluetooth"
bindsym $mod+Shift+b mode "$bluetooth_connect_mode"
mode "$bluetooth_connect_mode" {
    bindsym h exec "bluetoothctl connect `bluetoothctl devices | grep 'WF-C510' | cut -d' ' -f2`"
    bindsym Shift+h exec "bluetoothctl disconnect `bluetoothctl devices | grep 'WF-C510' | cut -d' ' -f2`"
    bindsym s exec "bluetoothctl connect `bluetoothctl devices | grep SRS-XB12 | cut -d' ' -f2`"
    bindsym Shift+s exec "bluetoothctl disconnect `bluetoothctl devices | grep SRS-XB12 | cut -d' ' -f2`"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym $mod+o exec --no-startup-id "orca"
bindsym $mod+Shift+o exec "killall -9 orca"
